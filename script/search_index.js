window.esdocSearchIndex = [
  [
    "influx/~backoffstrategy",
    "class/src/doc.js~BackoffStrategy.html",
    "<span>BackoffStrategy</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~exponentialbackoff",
    "class/src/backoff/exponential.js~ExponentialBackoff.html",
    "<span>ExponentialBackoff</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~expression",
    "class/src/builder.js~Expression.html",
    "<span>Expression</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~influxdb",
    "class/src/index.js~InfluxDB.html",
    "<span>InfluxDB</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~measurement",
    "class/src/builder.js~Measurement.html",
    "<span>Measurement</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~pool",
    "class/src/pool.js~Pool.html",
    "<span>Pool</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~precision",
    "variable/index.html#static-variable-Precision",
    "<span>Precision</span> <span class=\"search-result-import-path\">influx/</span>",
    "variable"
  ],
  [
    "influx/~raw",
    "class/src/grammar/ds.js~Raw.html",
    "<span>Raw</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~requesterror",
    "class/src/pool.js~RequestError.html",
    "<span>RequestError</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~resulterror",
    "class/src/results.js~ResultError.html",
    "<span>ResultError</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~servicenotavailableerror",
    "class/src/pool.js~ServiceNotAvailableError.html",
    "<span>ServiceNotAvailableError</span> <span class=\"search-result-import-path\">influx/</span>",
    "class"
  ],
  [
    "influx/~escape",
    "variable/index.html#static-variable-escape",
    "<span>escape</span> <span class=\"search-result-import-path\">influx/</span>",
    "variable"
  ],
  [
    "influx/~tonanodate",
    "function/index.html#static-function-toNanoDate",
    "<span>toNanoDate</span> <span class=\"search-result-import-path\">influx/</span>",
    "function"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~arraybuffer",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~dataview",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~date",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Date",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~error",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Error",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~evalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float64array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generator",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generatorfunction",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~infinity",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~internalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~json",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~map",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Map",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~nan",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~promise",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~proxy",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~rangeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~referenceerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~reflect",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~regexp",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~set",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Set",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~String",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~symbol",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~syntaxerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~typeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~urierror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8clampedarray",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakmap",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakset",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~null",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~null",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~string",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~undefined",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~audiocontext",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~canvasrenderingcontext2d",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~documentfragment",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~element",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Element",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~event",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Event",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~node",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Node",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~nodelist",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~NodeList",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~xmlhttprequest",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "external"
  ],
  [
    "",
    "test-file/unit/backoff.test.js.html#lineNumber3",
    "backoff strategies",
    "test"
  ],
  [
    "",
    "test-file/unit/backoff.test.js.html#lineNumber4",
    "backoff strategies exponential strategy",
    "test"
  ],
  [
    "",
    "test-file/unit/backoff.test.js.html#lineNumber5",
    "backoff strategies exponential strategy appears to work",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber4",
    "grammar",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber6",
    "grammar ",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber8",
    "grammar  ",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber23",
    "grammar converts a nanoseconds timestamp to a nano date",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber14",
    "grammar does not escape raw values",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber29",
    "grammar formatting",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber33",
    "grammar formatting formats millisecond dates",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber30",
    "grammar formatting formats nanosecond dates",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber37",
    "grammar parsing",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber38",
    "grammar parsing parses ISO dates correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber71",
    "grammar parsing parses numeric `h` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber66",
    "grammar parsing parses numeric `m` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber56",
    "grammar parsing parses numeric `ms` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber44",
    "grammar parsing parses numeric `ns` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber61",
    "grammar parsing parses numeric `s` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber50",
    "grammar parsing parses numeric `u` timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber77",
    "grammar timestamp casting",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber78",
    "grammar timestamp casting casts dates into timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/grammar.test.js.html#lineNumber87",
    "grammar timestamp casting casts nanodates into timestamps",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber5",
    "influxdb",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber6",
    "influxdb constructor",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber49",
    "influxdb constructor parses cluster configs",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber21",
    "influxdb constructor parses dsns",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber62",
    "influxdb constructor parses parses schema",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber35",
    "influxdb constructor parses single configs",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber7",
    "influxdb constructor uses default options",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber95",
    "influxdb methods",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber324",
    "influxdb methods .createContinuousQuery()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber332",
    "influxdb methods .createContinuousQuery() fills in default DB",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber325",
    "influxdb methods .createContinuousQuery() queries correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber329",
    "influxdb methods .createContinuousQuery() throws if DB unspecified",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber162",
    "influxdb methods .createDatabase()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber270",
    "influxdb methods .createUser()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber275",
    "influxdb methods .createUser() works with admin specified == false",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber271",
    "influxdb methods .createUser() works with admin specified == true",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber279",
    "influxdb methods .createUser() works with admin unspecified",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber338",
    "influxdb methods .dropContinuousQuery()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber346",
    "influxdb methods .dropContinuousQuery() fills in default DB",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber339",
    "influxdb methods .dropContinuousQuery() queries correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber343",
    "influxdb methods .dropContinuousQuery() throws if DB unspecified",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber168",
    "influxdb methods .dropDatabase()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber232",
    "influxdb methods .dropMeasurement()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber236",
    "influxdb methods .dropSeries()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber253",
    "influxdb methods .dropSeries() drops with both",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber241",
    "influxdb methods .dropSeries() drops with only from clause by builder",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber237",
    "influxdb methods .dropSeries() drops with only from clause by string",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber249",
    "influxdb methods .dropSeries() drops with only where clause by builder",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber245",
    "influxdb methods .dropSeries() drops with only where clause by string",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber320",
    "influxdb methods .dropUser()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber174",
    "influxdb methods .getDatabaseNames()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber180",
    "influxdb methods .getMeasurements()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber186",
    "influxdb methods .getSeries() from all",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber217",
    "influxdb methods .getSeries() from single",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber261",
    "influxdb methods .getUsers()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber312",
    "influxdb methods .grantAdminPrivilege()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber284",
    "influxdb methods .grantPrivilege()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber292",
    "influxdb methods .grantPrivilege() fills in default DB",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber285",
    "influxdb methods .grantPrivilege() queries correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber289",
    "influxdb methods .grantPrivilege() throws if DB unspecified",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber316",
    "influxdb methods .revokeAdminPrivilege()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber298",
    "influxdb methods .revokePrivilege()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber306",
    "influxdb methods .revokePrivilege() fills in default DB",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber299",
    "influxdb methods .revokePrivilege() queries correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber303",
    "influxdb methods .revokePrivilege() throws if DB unspecified",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber519",
    "influxdb methods .write methods",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber532",
    "influxdb methods .write methods parses query output",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber521",
    "influxdb methods .write methods runs raw queries",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber546",
    "influxdb methods .write methods selects from multiple",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber352",
    "influxdb methods .writePoints()",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber488",
    "influxdb methods .writePoints() accepts nanoseconds (as ms)",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber503",
    "influxdb methods .writePoints() accepts nanoseconds (as ns)",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber447",
    "influxdb methods .writePoints() handles lack of fields",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber434",
    "influxdb methods .writePoints() handles lack of tags",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber460",
    "influxdb methods .writePoints() handles multiple tags",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber407",
    "influxdb methods .writePoints() throws on schema violations",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber388",
    "influxdb methods .writePoints() uses a schema to coerce",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber372",
    "influxdb methods .writePoints() writes using default options without a schema",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber353",
    "influxdb methods .writePoints() writes with all options specified without a schema",
    "test"
  ],
  [
    "",
    "test-file/unit/influx.test.js.html#lineNumber473",
    "influxdb methods .writePoints() writes with the .writeMeasurement method",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber7",
    "pool",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber182",
    "pool backoff",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber205",
    "pool backoff should back off if failures continue",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber192",
    "pool backoff should error if there are no available hosts",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber200",
    "pool backoff should reenable hosts after the backoff expires",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber219",
    "pool backoff should reset backoff after success",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber150",
    "pool calls back immediately on un-retryable error",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber135",
    "pool fails if too many errors happen",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber163",
    "pool gets enabled/disabled hosts",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber34",
    "pool request generators",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber66",
    "pool request generators discards responses",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber81",
    "pool request generators errors if JSON parsing fails",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber45",
    "pool request generators includes request query strings and bodies",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber35",
    "pool request generators makes a text request",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber73",
    "pool request generators parses JSON responses",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber123",
    "pool retries on a request error",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber91",
    "pool round robins requests",
    "test"
  ],
  [
    "",
    "test-file/unit/pool.test.js.html#lineNumber108",
    "pool times out requests",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber3",
    "query builder",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber35",
    "query builder expression builder",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber108",
    "query builder expression builder ",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber36",
    "query builder expression builder creates basic queries",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber43",
    "query builder expression builder inserts data types correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber83",
    "query builder expression builder throws when using a flagged regex",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber87",
    "query builder expression builder throws when using un-stringifyable object",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber4",
    "query builder measurement builder",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber23",
    "query builder measurement builder builds with name and db",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber10",
    "query builder measurement builder builds with name and rp",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber16",
    "query builder measurement builder builds with name, rp, and db",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber5",
    "query builder measurement builder builds with only name",
    "test"
  ],
  [
    "",
    "test-file/unit/builder.test.js.html#lineNumber29",
    "query builder measurement builder throws when a name is omitted",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber3",
    "results",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber4",
    "results parses a empty result",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber18",
    "results parses a simple table of results",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber43",
    "results parses alternate epochs",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber129",
    "results parses empty series",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber135",
    "results parses empty values",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber83",
    "results parses grouped results",
    "test"
  ],
  [
    "",
    "test-file/unit/result.test.js.html#lineNumber145",
    "results throws error on an errorful series",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber4",
    "schema",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber32",
    "schema basic schema",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber46",
    "schema basic schema accepts partial data",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber81",
    "schema basic schema allows valid tags",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber33",
    "schema basic schema coerces data correctly",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber53",
    "schema basic schema coerces numeric string data",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber60",
    "schema basic schema strips null and undefined values",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber88",
    "schema basic schema throws if invalid fields are provided",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber85",
    "schema basic schema throws if invalid tags are provided",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber69",
    "schema basic schema throws if wrong data type provided (bool)",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber73",
    "schema basic schema throws if wrong data type provided (float)",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber77",
    "schema basic schema throws if wrong data type provided (int)",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber19",
    "schema coerceBadly",
    "test"
  ],
  [
    "",
    "test-file/unit/schema.test.js.html#lineNumber20",
    "schema coerceBadly apparently works",
    "test"
  ],
  [
    "src/backoff/backoff.js",
    "file/src/backoff/backoff.js.html",
    "src/backoff/backoff.js",
    "file"
  ],
  [
    "src/backoff/exponential.js",
    "file/src/backoff/exponential.js.html",
    "src/backoff/exponential.js",
    "file"
  ],
  [
    "src/backoff/exponential.js~exponentialbackoff#constructor",
    "class/src/backoff/exponential.js~ExponentialBackoff.html#instance-constructor-constructor",
    "src/backoff/exponential.js~ExponentialBackoff#constructor",
    "method"
  ],
  [
    "src/backoff/exponential.js~exponentialbackoff#getdelay",
    "class/src/backoff/exponential.js~ExponentialBackoff.html#instance-method-getDelay",
    "src/backoff/exponential.js~ExponentialBackoff#getDelay",
    "method"
  ],
  [
    "src/backoff/exponential.js~exponentialbackoff#next",
    "class/src/backoff/exponential.js~ExponentialBackoff.html#instance-method-next",
    "src/backoff/exponential.js~ExponentialBackoff#next",
    "method"
  ],
  [
    "src/backoff/exponential.js~exponentialbackoff#reset",
    "class/src/backoff/exponential.js~ExponentialBackoff.html#instance-method-reset",
    "src/backoff/exponential.js~ExponentialBackoff#reset",
    "method"
  ],
  [
    "src/builder.js",
    "file/src/builder.js.html",
    "src/builder.js",
    "file"
  ],
  [
    "src/builder.js~expression#and",
    "class/src/builder.js~Expression.html#instance-get-and",
    "src/builder.js~Expression#and",
    "member"
  ],
  [
    "src/builder.js~expression#div",
    "class/src/builder.js~Expression.html#instance-get-div",
    "src/builder.js~Expression#div",
    "member"
  ],
  [
    "src/builder.js~expression#doesntmatch",
    "class/src/builder.js~Expression.html#instance-get-doesntMatch",
    "src/builder.js~Expression#doesntMatch",
    "member"
  ],
  [
    "src/builder.js~expression#equals",
    "class/src/builder.js~Expression.html#instance-get-equals",
    "src/builder.js~Expression#equals",
    "member"
  ],
  [
    "src/builder.js~expression#exp",
    "class/src/builder.js~Expression.html#instance-method-exp",
    "src/builder.js~Expression#exp",
    "method"
  ],
  [
    "src/builder.js~expression#field",
    "class/src/builder.js~Expression.html#instance-method-field",
    "src/builder.js~Expression#field",
    "method"
  ],
  [
    "src/builder.js~expression#gt",
    "class/src/builder.js~Expression.html#instance-get-gt",
    "src/builder.js~Expression#gt",
    "member"
  ],
  [
    "src/builder.js~expression#gte",
    "class/src/builder.js~Expression.html#instance-get-gte",
    "src/builder.js~Expression#gte",
    "member"
  ],
  [
    "src/builder.js~expression#lt",
    "class/src/builder.js~Expression.html#instance-get-lt",
    "src/builder.js~Expression#lt",
    "member"
  ],
  [
    "src/builder.js~expression#lte",
    "class/src/builder.js~Expression.html#instance-get-lte",
    "src/builder.js~Expression#lte",
    "member"
  ],
  [
    "src/builder.js~expression#matches",
    "class/src/builder.js~Expression.html#instance-get-matches",
    "src/builder.js~Expression#matches",
    "member"
  ],
  [
    "src/builder.js~expression#minus",
    "class/src/builder.js~Expression.html#instance-get-minus",
    "src/builder.js~Expression#minus",
    "member"
  ],
  [
    "src/builder.js~expression#notequal",
    "class/src/builder.js~Expression.html#instance-get-notEqual",
    "src/builder.js~Expression#notEqual",
    "member"
  ],
  [
    "src/builder.js~expression#or",
    "class/src/builder.js~Expression.html#instance-get-or",
    "src/builder.js~Expression#or",
    "member"
  ],
  [
    "src/builder.js~expression#plus",
    "class/src/builder.js~Expression.html#instance-get-plus",
    "src/builder.js~Expression#plus",
    "member"
  ],
  [
    "src/builder.js~expression#tag",
    "class/src/builder.js~Expression.html#instance-method-tag",
    "src/builder.js~Expression#tag",
    "method"
  ],
  [
    "src/builder.js~expression#times",
    "class/src/builder.js~Expression.html#instance-get-times",
    "src/builder.js~Expression#times",
    "member"
  ],
  [
    "src/builder.js~expression#tostring",
    "class/src/builder.js~Expression.html#instance-method-toString",
    "src/builder.js~Expression#toString",
    "method"
  ],
  [
    "src/builder.js~expression#value",
    "class/src/builder.js~Expression.html#instance-method-value",
    "src/builder.js~Expression#value",
    "method"
  ],
  [
    "src/builder.js~measurement#db",
    "class/src/builder.js~Measurement.html#instance-method-db",
    "src/builder.js~Measurement#db",
    "method"
  ],
  [
    "src/builder.js~measurement#name",
    "class/src/builder.js~Measurement.html#instance-method-name",
    "src/builder.js~Measurement#name",
    "method"
  ],
  [
    "src/builder.js~measurement#policy",
    "class/src/builder.js~Measurement.html#instance-method-policy",
    "src/builder.js~Measurement#policy",
    "method"
  ],
  [
    "src/builder.js~measurement#tostring",
    "class/src/builder.js~Measurement.html#instance-method-toString",
    "src/builder.js~Measurement#toString",
    "method"
  ],
  [
    "src/doc.js",
    "file/src/doc.js.html",
    "src/doc.js",
    "file"
  ],
  [
    "src/doc.js~backoffstrategy#getdelay",
    "class/src/doc.js~BackoffStrategy.html#instance-method-getDelay",
    "src/doc.js~BackoffStrategy#getDelay",
    "method"
  ],
  [
    "src/doc.js~backoffstrategy#next",
    "class/src/doc.js~BackoffStrategy.html#instance-method-next",
    "src/doc.js~BackoffStrategy#next",
    "method"
  ],
  [
    "src/doc.js~backoffstrategy#reset",
    "class/src/doc.js~BackoffStrategy.html#instance-method-reset",
    "src/doc.js~BackoffStrategy#reset",
    "method"
  ],
  [
    "src/doc.js~clusterconfig",
    "typedef/index.html#static-typedef-ClusterConfig",
    "src/doc.js~ClusterConfig",
    "typedef"
  ],
  [
    "src/doc.js~point",
    "typedef/index.html#static-typedef-Point",
    "src/doc.js~Point",
    "typedef"
  ],
  [
    "src/doc.js~pooloptions",
    "typedef/index.html#static-typedef-PoolOptions",
    "src/doc.js~PoolOptions",
    "typedef"
  ],
  [
    "src/doc.js~queryoptions",
    "typedef/index.html#static-typedef-QueryOptions",
    "src/doc.js~QueryOptions",
    "typedef"
  ],
  [
    "src/doc.js~schemaoptions",
    "typedef/index.html#static-typedef-SchemaOptions",
    "src/doc.js~SchemaOptions",
    "typedef"
  ],
  [
    "src/doc.js~singlehostconfig",
    "typedef/index.html#static-typedef-SingleHostConfig",
    "src/doc.js~SingleHostConfig",
    "typedef"
  ],
  [
    "src/doc.js~writeoptions",
    "typedef/index.html#static-typedef-WriteOptions",
    "src/doc.js~WriteOptions",
    "typedef"
  ],
  [
    "src/grammar/ds.js",
    "file/src/grammar/ds.js.html",
    "src/grammar/ds.js",
    "file"
  ],
  [
    "src/grammar/ds.js~fieldtype",
    "typedef/index.html#static-typedef-FieldType",
    "src/grammar/ds.js~FieldType",
    "typedef"
  ],
  [
    "src/grammar/ds.js~raw#constructor",
    "class/src/grammar/ds.js~Raw.html#instance-constructor-constructor",
    "src/grammar/ds.js~Raw#constructor",
    "method"
  ],
  [
    "src/grammar/ds.js~raw#getvalue",
    "class/src/grammar/ds.js~Raw.html#instance-method-getValue",
    "src/grammar/ds.js~Raw#getValue",
    "method"
  ],
  [
    "src/grammar/escape.js",
    "file/src/grammar/escape.js.html",
    "src/grammar/escape.js",
    "file"
  ],
  [
    "src/grammar/index.js",
    "file/src/grammar/index.js.html",
    "src/grammar/index.js",
    "file"
  ],
  [
    "src/grammar/times.js",
    "file/src/grammar/times.js.html",
    "src/grammar/times.js",
    "file"
  ],
  [
    "src/host.js",
    "file/src/host.js.html",
    "src/host.js",
    "file"
  ],
  [
    "src/index.js",
    "file/src/index.js.html",
    "src/index.js",
    "file"
  ],
  [
    "src/index.js~influxdb#constructor",
    "class/src/index.js~InfluxDB.html#instance-constructor-constructor",
    "src/index.js~InfluxDB#constructor",
    "method"
  ],
  [
    "src/index.js~influxdb#createcontinuousquery",
    "class/src/index.js~InfluxDB.html#instance-method-createContinuousQuery",
    "src/index.js~InfluxDB#createContinuousQuery",
    "method"
  ],
  [
    "src/index.js~influxdb#createdatabase",
    "class/src/index.js~InfluxDB.html#instance-method-createDatabase",
    "src/index.js~InfluxDB#createDatabase",
    "method"
  ],
  [
    "src/index.js~influxdb#createuser",
    "class/src/index.js~InfluxDB.html#instance-method-createUser",
    "src/index.js~InfluxDB#createUser",
    "method"
  ],
  [
    "src/index.js~influxdb#dropcontinuousquery",
    "class/src/index.js~InfluxDB.html#instance-method-dropContinuousQuery",
    "src/index.js~InfluxDB#dropContinuousQuery",
    "method"
  ],
  [
    "src/index.js~influxdb#dropdatabase",
    "class/src/index.js~InfluxDB.html#instance-method-dropDatabase",
    "src/index.js~InfluxDB#dropDatabase",
    "method"
  ],
  [
    "src/index.js~influxdb#dropmeasurement",
    "class/src/index.js~InfluxDB.html#instance-method-dropMeasurement",
    "src/index.js~InfluxDB#dropMeasurement",
    "method"
  ],
  [
    "src/index.js~influxdb#dropseries",
    "class/src/index.js~InfluxDB.html#instance-method-dropSeries",
    "src/index.js~InfluxDB#dropSeries",
    "method"
  ],
  [
    "src/index.js~influxdb#dropuser",
    "class/src/index.js~InfluxDB.html#instance-method-dropUser",
    "src/index.js~InfluxDB#dropUser",
    "method"
  ],
  [
    "src/index.js~influxdb#getdatabasenames",
    "class/src/index.js~InfluxDB.html#instance-method-getDatabaseNames",
    "src/index.js~InfluxDB#getDatabaseNames",
    "method"
  ],
  [
    "src/index.js~influxdb#getmeasurements",
    "class/src/index.js~InfluxDB.html#instance-method-getMeasurements",
    "src/index.js~InfluxDB#getMeasurements",
    "method"
  ],
  [
    "src/index.js~influxdb#getseries",
    "class/src/index.js~InfluxDB.html#instance-method-getSeries",
    "src/index.js~InfluxDB#getSeries",
    "method"
  ],
  [
    "src/index.js~influxdb#getusers",
    "class/src/index.js~InfluxDB.html#instance-method-getUsers",
    "src/index.js~InfluxDB#getUsers",
    "method"
  ],
  [
    "src/index.js~influxdb#grantadminprivilege",
    "class/src/index.js~InfluxDB.html#instance-method-grantAdminPrivilege",
    "src/index.js~InfluxDB#grantAdminPrivilege",
    "method"
  ],
  [
    "src/index.js~influxdb#grantprivilege",
    "class/src/index.js~InfluxDB.html#instance-method-grantPrivilege",
    "src/index.js~InfluxDB#grantPrivilege",
    "method"
  ],
  [
    "src/index.js~influxdb#query",
    "class/src/index.js~InfluxDB.html#instance-method-query",
    "src/index.js~InfluxDB#query",
    "method"
  ],
  [
    "src/index.js~influxdb#queryraw",
    "class/src/index.js~InfluxDB.html#instance-method-queryRaw",
    "src/index.js~InfluxDB#queryRaw",
    "method"
  ],
  [
    "src/index.js~influxdb#revokeadminprivilege",
    "class/src/index.js~InfluxDB.html#instance-method-revokeAdminPrivilege",
    "src/index.js~InfluxDB#revokeAdminPrivilege",
    "method"
  ],
  [
    "src/index.js~influxdb#revokeprivilege",
    "class/src/index.js~InfluxDB.html#instance-method-revokePrivilege",
    "src/index.js~InfluxDB#revokePrivilege",
    "method"
  ],
  [
    "src/index.js~influxdb#setpassword",
    "class/src/index.js~InfluxDB.html#instance-method-setPassword",
    "src/index.js~InfluxDB#setPassword",
    "method"
  ],
  [
    "src/index.js~influxdb#writemeasurement",
    "class/src/index.js~InfluxDB.html#instance-method-writeMeasurement",
    "src/index.js~InfluxDB#writeMeasurement",
    "method"
  ],
  [
    "src/index.js~influxdb#writepoints",
    "class/src/index.js~InfluxDB.html#instance-method-writePoints",
    "src/index.js~InfluxDB#writePoints",
    "method"
  ],
  [
    "src/pool.js",
    "file/src/pool.js.html",
    "src/pool.js",
    "file"
  ],
  [
    "src/pool.js~pool#addhost",
    "class/src/pool.js~Pool.html#instance-method-addHost",
    "src/pool.js~Pool#addHost",
    "method"
  ],
  [
    "src/pool.js~pool#constructor",
    "class/src/pool.js~Pool.html#instance-constructor-constructor",
    "src/pool.js~Pool#constructor",
    "method"
  ],
  [
    "src/pool.js~pool#disablehost",
    "class/src/pool.js~Pool.html#instance-method-disableHost",
    "src/pool.js~Pool#disableHost",
    "method"
  ],
  [
    "src/pool.js~pool#discard",
    "class/src/pool.js~Pool.html#instance-method-discard",
    "src/pool.js~Pool#discard",
    "method"
  ],
  [
    "src/pool.js~pool#enablehost",
    "class/src/pool.js~Pool.html#instance-method-enableHost",
    "src/pool.js~Pool#enableHost",
    "method"
  ],
  [
    "src/pool.js~pool#gethost",
    "class/src/pool.js~Pool.html#instance-method-getHost",
    "src/pool.js~Pool#getHost",
    "method"
  ],
  [
    "src/pool.js~pool#gethostsavailable",
    "class/src/pool.js~Pool.html#instance-method-getHostsAvailable",
    "src/pool.js~Pool#getHostsAvailable",
    "method"
  ],
  [
    "src/pool.js~pool#gethostsdisabled",
    "class/src/pool.js~Pool.html#instance-method-getHostsDisabled",
    "src/pool.js~Pool#getHostsDisabled",
    "method"
  ],
  [
    "src/pool.js~pool#hostisavailable",
    "class/src/pool.js~Pool.html#instance-method-hostIsAvailable",
    "src/pool.js~Pool#hostIsAvailable",
    "method"
  ],
  [
    "src/pool.js~pool#json",
    "class/src/pool.js~Pool.html#instance-method-json",
    "src/pool.js~Pool#json",
    "method"
  ],
  [
    "src/pool.js~pool#stream",
    "class/src/pool.js~Pool.html#instance-method-stream",
    "src/pool.js~Pool#stream",
    "method"
  ],
  [
    "src/pool.js~pool#text",
    "class/src/pool.js~Pool.html#instance-method-text",
    "src/pool.js~Pool#text",
    "method"
  ],
  [
    "src/results.js",
    "file/src/results.js.html",
    "src/results.js",
    "file"
  ],
  [
    "src/schema.js",
    "file/src/schema.js.html",
    "src/schema.js",
    "file"
  ],
  [
    "unit/backoff.test.js",
    "test-file/unit/backoff.test.js.html",
    "unit/backoff.test.js",
    "testFile"
  ],
  [
    "unit/builder.test.js",
    "test-file/unit/builder.test.js.html",
    "unit/builder.test.js",
    "testFile"
  ],
  [
    "unit/grammar.test.js",
    "test-file/unit/grammar.test.js.html",
    "unit/grammar.test.js",
    "testFile"
  ],
  [
    "unit/influx.test.js",
    "test-file/unit/influx.test.js.html",
    "unit/influx.test.js",
    "testFile"
  ],
  [
    "unit/pool.test.js",
    "test-file/unit/pool.test.js.html",
    "unit/pool.test.js",
    "testFile"
  ],
  [
    "unit/result.test.js",
    "test-file/unit/result.test.js.html",
    "unit/result.test.js",
    "testFile"
  ],
  [
    "unit/schema.test.js",
    "test-file/unit/schema.test.js.html",
    "unit/schema.test.js",
    "testFile"
  ]
]